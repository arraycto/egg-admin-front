{"version":3,"file":"js/0.js","sources":["webpack:///./node_modules/core-js/modules/es.array.every.js","webpack:///./src/mixins/crud.js"],"sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar $every = require('../internals/array-iteration').every;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar STRICT_METHOD = arrayMethodIsStrict('every');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('every');\n\n// `Array.prototype.every` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.every\n$({ target: 'Array', proto: true, forced: !STRICT_METHOD || !USES_TO_LENGTH }, {\n  every: function every(callbackfn /* , thisArg */) {\n    return $every(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","import \"core-js/modules/es.array.every\";\nimport \"core-js/modules/es.array.join\";\nimport \"core-js/modules/es.array.map\";\nimport \"core-js/modules/es.object.to-string\";\nimport _objectSpread from \"/github/workspace/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/github/workspace/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nexport default {\n  data: function data() {\n    return {\n      // 设置属性\n      crudOption: {\n        rowKey: \"_id\",\n        // 删除使用的key(id/_id/uuid/...)\n        created: true,\n        // 此页面是否在激活（进入）时，查询数据列表?\n        getList: null,\n        // 获取数据列表方法\n        create: null,\n        // 添加数据方法\n        update: null,\n        // 编辑数据方法\n        remove: null // 删除单条数据方法\n\n      },\n      // 默认属性\n      pageDefault: {\n        total: 0,\n        // 总条数\n        currentPage: 1,\n        // 当前页数\n        pageSize: 10 // 每页显示多少条\n\n      },\n      page: null,\n      sortDefault: {\n        order: \"descending\",\n        prop: \"createTime\"\n      },\n      // 排序\n      sort: null,\n      searchForm: {},\n      // 查询条件\n      tableData: [],\n      // 数据列表\n      formData: {},\n      tableLoading: false,\n      // 数据列表，loading状态\n      dataSelections: [] // 数据列表，多选项\n\n    };\n  },\n  created: function created() {\n    if (this.crudOption.created) {\n      this.getDataList();\n    }\n  },\n  methods: {\n    /**\n     * @description 获取数据列表\n     */\n    getDataList: function getDataList() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.t0 = _this.beforeGetList;\n\n                if (!_context2.t0) {\n                  _context2.next = 4;\n                  break;\n                }\n\n                _context2.next = 4;\n                return _this.beforeGetList();\n\n              case 4:\n                _this.tableLoading = true;\n\n                if (!_this.page) {\n                  _this.page = _this.pageDefault || {};\n                }\n\n                if (!_this.sort) {\n                  _this.sort = _this.sortDefault || {};\n                }\n\n                return _context2.abrupt(\"return\", _this.crudOption.getList(_objectSpread(_objectSpread(_objectSpread({}, _this.page), _this.sort), _this.searchForm)).then(function (response) {\n                  console.log(response);\n                  _this.tableData = response.data || [];\n                  _this.page.total = response.total || 0;\n                }).catch(function (e) {\n                  _this.tableData = [];\n                  _this.page.total = 0;\n                }).finally( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n                  return regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _this.$refs.crud && _this.$refs.crud.selectClear();\n                          _this.tableLoading = false;\n                          _context.t0 = _this.afterGetList;\n\n                          if (!_context.t0) {\n                            _context.next = 6;\n                            break;\n                          }\n\n                          _context.next = 6;\n                          return _this.afterGetList();\n\n                        case 6:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }))));\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n\n    /**\n     * @description 数据添加\n     * @param {Object} row 为当前的数据\n     * @param {Function} done 为表单关闭函数\n     * @param {Function} loading 为表单停止loading函数\n     **/\n    handleSave: function handleSave(row, done, loading) {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        var obj;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.t0 = _this2.beforeSave;\n\n                if (!_context4.t0) {\n                  _context4.next = 4;\n                  break;\n                }\n\n                _context4.next = 4;\n                return _this2.beforeSave();\n\n              case 4:\n                obj = _this2.filterObj(row);\n                delete obj[_this2.crudOption.rowKey];\n                return _context4.abrupt(\"return\", _this2.crudOption.create(obj).then(function (res) {\n                  _this2.$message.success(\"保存成功\");\n\n                  _this2.getDataList();\n\n                  done && done();\n                }).catch(function (e) {\n                  loading && loading();\n                }).finally( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n                  return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                      switch (_context3.prev = _context3.next) {\n                        case 0:\n                          _context3.t0 = _this2.afterSave;\n\n                          if (!_context3.t0) {\n                            _context3.next = 4;\n                            break;\n                          }\n\n                          _context3.next = 4;\n                          return _this2.afterSave();\n\n                        case 4:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }\n                  }, _callee3);\n                }))));\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }))();\n    },\n\n    /**\n     * @description 数据更新\n     * @param {Object} row 为当前的数据\n     * @param {Number} index 为当前更新数据的行数\n     * @param {Function} done 为表单关闭函数\n     * @param {Function} loading 为表单停止loading函数\n     **/\n    handleUpdate: function handleUpdate(row, index, done, loading) {\n      var _this3 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n        var obj;\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.t0 = _this3.beforeUpdate;\n\n                if (!_context6.t0) {\n                  _context6.next = 4;\n                  break;\n                }\n\n                _context6.next = 4;\n                return _this3.beforeUpdate();\n\n              case 4:\n                obj = _this3.filterObj(row);\n                return _context6.abrupt(\"return\", _this3.crudOption.update(obj[_this3.crudOption.rowKey], obj).then(function (res) {\n                  _this3.$message.success(\"保存成功\");\n\n                  _this3.getDataList();\n\n                  done && done();\n                }).catch(function (e) {\n                  loading && loading();\n                }).finally( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n                  return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                    while (1) {\n                      switch (_context5.prev = _context5.next) {\n                        case 0:\n                          _context5.t0 = _this3.afterUpdate;\n\n                          if (!_context5.t0) {\n                            _context5.next = 4;\n                            break;\n                          }\n\n                          _context5.next = 4;\n                          return _this3.afterUpdate();\n\n                        case 4:\n                        case \"end\":\n                          return _context5.stop();\n                      }\n                    }\n                  }, _callee5);\n                }))));\n\n              case 6:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }))();\n    },\n\n    /**\n     * @description 删除行\n     * @param {Object} row 行数据\n     */\n    rowDel: function rowDel(row) {\n      var _this4 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.t0 = _this4.beforeRowDel;\n\n                if (!_context8.t0) {\n                  _context8.next = 4;\n                  break;\n                }\n\n                _context8.next = 4;\n                return _this4.beforeRowDel();\n\n              case 4:\n                return _context8.abrupt(\"return\", _this4.$confirm(\"确认进行删除操作？\", \"提示\", {\n                  type: \"warning\"\n                }).then(function () {\n                  return _this4.crudOption.remove(row[_this4.crudOption.rowKey]);\n                }).then(function (res) {\n                  _this4.$message.success(\"删除成功\");\n\n                  _this4.getDataList();\n                }).finally( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n                  return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                    while (1) {\n                      switch (_context7.prev = _context7.next) {\n                        case 0:\n                          _context7.t0 = _this4.afterRowDel;\n\n                          if (!_context7.t0) {\n                            _context7.next = 4;\n                            break;\n                          }\n\n                          _context7.next = 4;\n                          return _this4.afterRowDel();\n\n                        case 4:\n                        case \"end\":\n                          return _context7.stop();\n                      }\n                    }\n                  }, _callee7);\n                }))));\n\n              case 5:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }))();\n    },\n\n    /**\n     * @description 搜索\n     * @param {Object} form 搜索表单数据(不含自定义项)\n     */\n    searchChange: function searchChange(form, done) {\n      this.searchForm = this.filterObj(Object.assign(this.searchForm, this.$refs.crud ? this.$refs.crud.searchForm : {}, form), [undefined, null, \"\"]);\n      this.getDataList();\n      done && done();\n    },\n\n    /**\n     * @description 搜索重置\n     */\n    searchReset: function searchReset() {\n      this.searchForm = {};\n      this.page = this.pageDefault;\n      this.getDataList();\n    },\n\n    /**\n     * @description 多选\n     * @param {Array} row 选中行数据\n     */\n    selectionChange: function selectionChange(row) {\n      this.dataSelections = row;\n    },\n\n    /**\n     * @description 批量删除\n     */\n    batchDel: function batchDel() {\n      var _this5 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10() {\n        var length;\n        return regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.t0 = _this5.beforeBatchDel;\n\n                if (!_context10.t0) {\n                  _context10.next = 4;\n                  break;\n                }\n\n                _context10.next = 4;\n                return _this5.beforeBatchDel();\n\n              case 4:\n                length = _this5.dataSelections.length;\n\n                if (length) {\n                  _context10.next = 7;\n                  break;\n                }\n\n                return _context10.abrupt(\"return\", _this5.$message.warning(\"请选择删除项\"));\n\n              case 7:\n                return _context10.abrupt(\"return\", _this5.$confirm(\"\\u786E\\u8BA4\\u5220\\u9664\\u6240\\u9009\\u7684\".concat(length, \"\\u6761\\u6570\\u636E\\uFF1F\"), \"提示\", {\n                  type: \"warning\"\n                }).then(function () {\n                  var ids = _this5.dataSelections.map(function (item) {\n                    return item[_this5.crudOption.rowKey];\n                  }) // 根据后端接口传数组或者逗号拼接的字符串\n                  .join(\",\");\n\n                  return _this5.crudOption.remove(ids);\n                }).then(function (res) {\n                  _this5.$message.success(\"删除成功\");\n\n                  _this5.getDataList();\n                }).finally( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {\n                  return regeneratorRuntime.wrap(function _callee9$(_context9) {\n                    while (1) {\n                      switch (_context9.prev = _context9.next) {\n                        case 0:\n                          _context9.t0 = _this5.afterBatchDel;\n\n                          if (!_context9.t0) {\n                            _context9.next = 4;\n                            break;\n                          }\n\n                          _context9.next = 4;\n                          return _this5.afterBatchDel();\n\n                        case 4:\n                        case \"end\":\n                          return _context9.stop();\n                      }\n                    }\n                  }, _callee9);\n                }))));\n\n              case 8:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10);\n      }))();\n    },\n\n    /**\n     * @description 分页, 每页条数\n     * @param {Number} size 每页条数\n     */\n    pageSizeChange: function pageSizeChange(size) {\n      this.page.pageSize = size;\n      this.getDataList();\n    },\n\n    /**\n     * @description 分页, 当前页\n     * @param {Number} current 当前页\n     */\n    pageCurrentChange: function pageCurrentChange(current) {\n      this.page.currentPage = current;\n      this.getDataList();\n    },\n\n    /**\n     * @description 排序\n     * @param {Object} column 列数据\n     * @param {String} order 排序顺序\n     * @param {String} prop 排序字段\n     */\n    sortChange: function sortChange(_ref6) {\n      var column = _ref6.column,\n          order = _ref6.order,\n          prop = _ref6.prop;\n\n      if (order && prop) {\n        this.sort = {\n          order: order,\n          prop: prop\n        };\n      } else {\n        this.sort = this.sortDefault;\n      }\n\n      this.getDataList();\n    },\n\n    /**\n     * @description 过滤对象空值\n     * @param {Object} row 被过滤对象\n     * @param {Array} value 过滤的值\n     */\n    filterObj: function filterObj(row) {\n      var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [undefined, null];\n      var temp = {};\n\n      var _loop = function _loop(key) {\n        if (value.every(function (val) {\n          return row[key] !== val;\n        })) {\n          temp[key] = row[key];\n        }\n      };\n\n      for (var key in row) {\n        _loop(key);\n      }\n\n      return temp;\n    }\n  }\n};"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACfsourceRoot":""}